/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package ru.nkz.ivcgzo.thriftCommon.classifier;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum StringClassifiers implements org.apache.thrift.TEnum {
  n_a00(1),
  n_azj(2),
  n_b00(3),
  n_c00(4),
  n_db9(5),
  n_k02(6),
  n_ldi(7),
  n_nz1(8),
  n_obst(9),
  n_r0c(11),
  n_r0z(12),
  n_s00(13),
  n_spr(14),
  n_db6(15);

  private final int value;

  private StringClassifiers(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static StringClassifiers findByValue(int value) { 
    switch (value) {
      case 1:
        return n_a00;
      case 2:
        return n_azj;
      case 3:
        return n_b00;
      case 4:
        return n_c00;
      case 5:
        return n_db9;
      case 6:
        return n_k02;
      case 7:
        return n_ldi;
      case 8:
        return n_nz1;
      case 9:
        return n_obst;
      case 11:
        return n_r0c;
      case 12:
        return n_r0z;
      case 13:
        return n_s00;
      case 14:
        return n_spr;
      case 15:
        return n_db6;
      default:
        return null;
    }
  }
}
